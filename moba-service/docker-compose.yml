version: '3.8'

services:
  moba-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: moba_service
    ports:
      - "${MOBA_SERVICE_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${POSTGRES_PORT:-5432}
      - DATABASE_USER=${POSTGRES_USER:-postgres}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DATABASE_NAME=${POSTGRES_DB:-moba}
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - moba-service-network

  postgres:
    image: postgres:latest
    container_name: postgres_moba_service
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-moba}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-moba}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - moba-service-network

  grafana_moba_service:
    image: grafana/grafana:latest
    container_name: grafana_moba_service
    ports:
      - "${GRAFANA_PORT:-3002}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}"
    networks:
      - moba-service-network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki_moba_service
    user: "0:0"  # Run as root to avoid permission issues
    ports:
      - "${LOKI_PORT:-3100}:3100"
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - moba-service-network

volumes:
  postgres_data:
  grafana_data:
  loki_data:

networks:
  moba-service-network:
    driver: bridge 